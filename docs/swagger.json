{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A comprehensive API for test.",
        "title": "Federico App API",
        "termsOfService": "http://example.com/terms",
        "contact": {
            "name": "API Support Team",
            "url": "http://example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/user/{userId}/balance": {
            "get": {
                "description": "Gets current user balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Gets current user balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User identifier",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/{userId}/transaction": {
            "post": {
                "description": "Updates user balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Updates user balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source type of the request",
                        "name": "Source-type",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Data for transaction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserDoTransactionRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "User identifier",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.UserDoTransactionRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "string"
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "200.0"
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT security accessToken. Please add it in the format \"Bearer {AccessToken}\" to authorize your requests.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}